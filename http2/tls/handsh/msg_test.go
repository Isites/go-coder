package handsh

import (
	"testing"

	"github.com/open-ch/ja3"
	"github.com/stretchr/testify/assert"
)

func Test_clientHelloMsgja3(t *testing.T) {
	helloBytes := []byte{1, 0, 0, 252, 3, 3, 48, 57, 100, 97, 101, 49, 97, 97, 51, 100, 50, 97, 57, 48, 100, 51, 99, 48, 55, 54, 98, 56, 97, 100, 98, 50, 51, 57, 56, 56, 49, 49, 32, 48, 57, 100, 97, 101, 49, 97, 97, 51, 100, 50, 97, 57, 48, 100, 51, 99, 48, 55, 54, 98, 56, 97, 100, 98, 50, 51, 57, 56, 56, 49, 49, 0, 38, 192, 43, 192, 47, 192, 44, 192, 48, 204, 169, 204, 168, 192, 9, 192, 19, 192, 10, 192, 20, 0, 156, 0, 157, 0, 47, 0, 53, 192, 18, 0, 10, 19, 1, 19, 2, 19, 3, 1, 0, 0, 141, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25, 0, 11, 0, 2, 1, 0, 0, 13, 0, 26, 0, 24, 8, 4, 4, 3, 8, 7, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 5, 3, 6, 3, 2, 1, 2, 3, 255, 1, 0, 1, 0, 0, 16, 0, 14, 0, 12, 2, 104, 50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 18, 0, 0, 0, 43, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, 51, 0, 38, 0, 36, 0, 29, 0, 32, 36, 158, 4, 131, 223, 74, 205, 97, 242, 132, 156, 233, 193, 238, 197, 17, 246, 243, 248, 212, 104, 76, 179, 5, 184, 163, 153, 23, 4, 205, 201, 113}
	chello := &clientHelloMsg{}
	ok := chello.unmarshal(helloBytes)
	assert.True(t, ok)
	payload := []byte{22, 3, 1, 1, 0, 1, 0, 0, 252, 3, 3, 48, 57, 100, 97, 101, 49, 97, 97, 51, 100, 50, 97, 57, 48, 100, 51, 99, 48, 55, 54, 98, 56, 97, 100, 98, 50, 51, 57, 56, 56, 49, 49, 32, 48, 57, 100, 97, 101, 49, 97, 97, 51, 100, 50, 97, 57, 48, 100, 51, 99, 48, 55, 54, 98, 56, 97, 100, 98, 50, 51, 57, 56, 56, 49, 49, 0, 38, 192, 43, 192, 47, 192, 44, 192, 48, 204, 169, 204, 168, 192, 9, 192, 19, 192, 10, 192, 20, 0, 156, 0, 157, 0, 47, 0, 53, 192, 18, 0, 10, 19, 1, 19, 2, 19, 3, 1, 0, 0, 141, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 10, 0, 10, 0, 8, 0, 29, 0, 23, 0, 24, 0, 25, 0, 11, 0, 2, 1, 0, 0, 13, 0, 26, 0, 24, 8, 4, 4, 3, 8, 7, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 5, 3, 6, 3, 2, 1, 2, 3, 255, 1, 0, 1, 0, 0, 16, 0, 14, 0, 12, 2, 104, 50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 18, 0, 0, 0, 43, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, 51, 0, 38, 0, 36, 0, 29, 0, 32, 36, 158, 4, 131, 223, 74, 205, 97, 242, 132, 156, 233, 193, 238, 197, 17, 246, 243, 248, 212, 104, 76, 179, 5, 184, 163, 153, 23, 4, 205, 201, 113}
	ja3Info, err := ja3.ComputeJA3FromSegment(payload)
	assert.Nil(t, err)
	assert.Emptyf(t, ja3Info.GetJA3String(), "特意输出ja3指纹明细：", ja3Info.GetJA3String())

}
